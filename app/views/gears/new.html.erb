<h1>新しいギアの登録</h1>

<%= form_with model: @gear do |form| %>
    
    <div>
        <%= form.label :"ギアの名前（過去の登録情報の呼び出し）" %><br>
        <%= form.select :name, options_for_select(@options), prompt: '選択してください' %>
    </div>
    <div>
        <%= form.label :"ギアの名前（新規登録）" %><br>
        <%= form.text_field :name, id: "text_name_id" %>
    </div>
    <div>
        <%= form.label :"重さ（グラム）" %><br>
        <%= form.number_field :weight %>
    </div>
    
    <div>
        <%= form.hidden_field :mntevents_id, value: @mntevents_id %>
        <%= form.hidden_field :user_id, value: current_user.id %>
        <%= form.submit 'ギアを登録', id: 'submit-button' %>
    </div>
    
    <div id="error-message" style="display: none;">
        
    </div>
    
    <div>
        <%= p "山行ID #{@mntevents_id}" %>
    </div>
<% end %>

<%= link_to '山行記録に戻る', mntevent_path(@mntevents_id) %>

<script>
  // セレクト要素が選ばれているときは，テキストフィールドを無効にし，テキストフィールドが選ばれているときはセレクトを無効にします．
  document.addEventListener("DOMContentLoaded", () => {
    const select = document.getElementById("gear_name");
    console.log(select)
    const input = document.getElementById("text_name_id");
    console.log(input)
    select.addEventListener("change", () => {
      if (select.value) {
        input.disabled = true;
      } else {
        input.disabled = false;
      }
    });
  
    input.addEventListener("input", () => {
      if (input.value) {
        select.disabled = true;
      } else {
        select.disabled = false;
      }
    });
  });

  // テキストフィールドに入ってきた入力がすでにDBに登録済みかどうかを調べ，登録済みであればエラーメッセージを表示し，Submitボタンを無効にします．
  // 登録済みでなければ，Submitボタンを有効にします
  document.addEventListener('DOMContentLoaded', function() {
    var inputField = document.getElementById('text_name_id');
    console.log(inputField)
    var submitButton = document.getElementById('submit-button');
    const errorMessage = document.querySelector('#error-message')

    inputField.addEventListener('input', function() {
      if (inputField.value !== '') {
        // Ajaxリクエストを送信し、重複チェックを行う
        
        fetch('/check_duplicate', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
      },
      body: JSON.stringify({ name: inputField.value })
    })
      .then(response => response.json())
      .then(data => {
        if (data.duplicate) {
          errorMessage.textContent = 'エラー：すでに登録しているギアと重複しています．別の名前で登録するか，プルダウンメニューから登録済みのギアを選んでください．';
          errorMessage.style.display = 'block';
          submitButton.disabled = true
        } else {
          errorMessage.style.display = 'none';
          submitButton.disabled = false
        }
      })
      .catch(error => console.error('エラー:', error));
    }});
  });
  
  // セレクト要素に入ってきた項目に応じて，DBからそのギアの重さを取得して，ナンバーフィールドに設定し，ナンバーフィールドをReadonlyにします
  document.addEventListener("DOMContentLoaded", () => {
  const select = document.getElementById("gear_name");
  const numberField = document.getElementById("gear_weight");
  
  

  select.addEventListener("change", () => {
    
    // number fieldが空（初期状態）であれば，numberFieldを空にして，readOnlyをFalseにします
    if (select.value == ""){
      numberField.value = null
      numberField.readOnly = false
    }
    else {
    fetch('/get_weight', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
      },
      body: JSON.stringify({ name: select.value })
    })
      .then(response => response.json())
      .then(data => {
          numberField.value = data.weight
          numberField.readOnly = true
      })
      .catch(error => console.error('エラー:', error));
  }
  });
});
</script>